//variables
double r = 0;
bool chairTableOpen = false;


//keyboard key
case 'h':
		if(chairTableOpen) {
			chairTableOpen = false;
		}
		else{
			chairTableOpen = true;
		}
		break;



void initChairList() {
	glPushMatrix();
	glNewList(2, GL_COMPILE);
	glColor3ub(0, 150, 100);
	GLUquadric *a = gluNewQuadric();
	glPushMatrix();
	glTranslatef(-5, 0, 0);

	glPushMatrix();
	glRotatef(90, 0, 1, 0);
	glTranslatef(0.9, -5, 0);
	gluCylinder(a, 0.25, 0.25, 10, 100, 100);
	glPopMatrix();

	glPushMatrix();
	glTranslatef(1.4, 10, -1.7);
	glRotatef(80, 1, -0.1, 0);
	gluCylinder(a, 0.25, 0.25, 10, 100, 100);
	glPopMatrix();

	glPushMatrix();
	glRotatef(90, 0, 1, 0);
	glTranslatef(-10.9, -5, 0);
	gluCylinder(a, 0.25, 0.25, 10, 100, 100);
	glPopMatrix();

	glPushMatrix();
	glRotatef(100, 1, 0, 0);
	gluCylinder(a, 0.25, 0.25, 10, 100, 100);
	glPopMatrix();

	glPushMatrix();
	gluCylinder(a, 0.25, 0.25, 10, 100, 100);
	glPopMatrix();
//handle
	glPushMatrix();
	glTranslatef(0, 6, 2);
	glScalef(0.7, 0.6,0.7);
	glPushMatrix();
	glRotatef(100, 1, 0, 0);
	gluCylinder(a, 0.25, 0.25, 10, 100, 100);
	glPopMatrix();

	glPushMatrix();
	gluCylinder(a, 0.25, 0.25, 10, 100, 100);
	glPopMatrix();
	glPushMatrix();
	glTranslatef(0, 0, 10);
	glRotatef(80, 1, 0, 0);
	gluCylinder(a, 0.25, 0.25, 10, 100, 100);
	glPopMatrix();
	glPopMatrix();

	glTranslatef(0, 0, 10);

	glPushMatrix();
	glRotatef(80, 1, 0, 0);
	gluCylinder(a, 0.25, 0.25, 10, 100, 100);
	glPopMatrix();

	glPopMatrix();




	glPushMatrix();
	glTranslatef(5, 0, 0);
	glPushMatrix();
	glTranslatef(-1.4, 10, -1.7);
	glRotatef(80, 1, 0.1, 0);
	gluCylinder(a, 0.25, 0.25, 10, 100, 100);
	glPopMatrix();

	glPushMatrix();
	glRotatef(100, 1, 0, 0);
	gluCylinder(a, 0.25, 0.25, 10, 100, 100);
	glPopMatrix();
	glPushMatrix();
	gluCylinder(a, 0.25, 0.25, 10, 100, 100);
	glPopMatrix();
	glTranslatef(0, 0, 10);
	glPushMatrix();
	glRotatef(80, 1, 0, 0);
	gluCylinder(a, 0.25, 0.25, 10, 100, 100);
	glPopMatrix();
	glPopMatrix();
//wooden stuff
	glPushMatrix();
	glColor3ub(110, 100, 20);
	glPushMatrix();
	glTranslatef(0, 6, -0.4);
	glRotatef(-10, 1, 0, 0);
	glScalef(1.5, 1, 0.1);
	glutSolidCube(7);
	glPopMatrix();
	
	glPushMatrix();
	glTranslatef(0, 0.55, 5.5);
	glScalef(1, 0.06, 0.9);
	glutSolidCube(11);
	glPopMatrix();
	glEndList();
	// table
	glNewList(3, GL_COMPILE);
	glPushMatrix();
	glColor3ub(110, 100, 20);
	glPushMatrix();
	glTranslatef(4.52, 0.5, 0);
	glScalef(1, 0.06, 0.6);
	glutSolidCube(11);
	glPopMatrix();
	glPushMatrix();
	glTranslatef(0, 0.5, -4);
	glScalef(0.4, 0.13, 0.6);
	glutSolidCube(5);
	glPopMatrix();
	glPopMatrix();
	glPopMatrix();
	glEndList();
	glPopMatrix();
	
}



void drewChair() {
	if(chairTableOpen) {
		if(r<90) {
			r += 2;
		}
	}
	else {
		if(r> 0) {
			r -= 2;
		}
	}
	glCallList(2);
	glTranslatef(-5.2, 6, 7.4);
	glRotatef(r, 0, 0, 1);
	glCallList(3);
}